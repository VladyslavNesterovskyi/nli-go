[
    == Who married X? ==
    {
        condition: question() who(A) married_to(A, B),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: gender(B, G) name(A, N, canonical_name),
            answer: gender(B, G) name(A, N) make_and(A, R) married_to(R, B)
        }
    }

    == Was X married to Y? ==
    {
        condition: question() yes_no() married_to(A, B),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            answer: result(true)
        }
    }

    == How many children had X? (counting the children) ==
    {
        condition: question() how_many(B) have_child(A, B),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: gender(A, Gender) number_of(Number, B),
            answer: gender(A, Gender) have_child(A, C) count(C, Number)
        }
    }

    == How many? ==
    {
        condition: question() how_many(B),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: number_of(Number, B),
            answer: canned(Number)
        }
    }

    == How many children had X? (using a number-of-children attribute) ==
    {
        condition: question() how_many(B) have_child(A, B),
        transformations: [
            have_child(A, B) => have_n_children(A, Number);
        ],
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: gender(A, Gender),
            answer: gender(A, Gender) have_child(A, C) count(C, Number)
        }
    }

    == Who was X's father? ==
    {
        condition: question() who(B) has_father(A, B),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: gender(A, Gender) name(B, N, canonical_name),
            answer: gender(A, Gender) name(B, N) has_father(A, B)
        }
    }

    == Who was X's mother? ==
    {
        condition: question() who(B) has_mother(A, B),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: gender(A, Gender) name(B, N, canonical_name),
            answer: gender(A, Gender) name(B, N) has_mother(A, B)
        }
    }

    == When was X born? ==
    {
        condition: question() when() birth_date(A, Ymd),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: gender(A, Gender) split(Ymd, '-', Year, Month, Day),
            answer: gender(A, Gender) birth_date(A, Day, Month, Year)
        }
    }

    == When did X die? ==
    {
        condition: question() when() death_date(A, Ymd),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: gender(A, Gender) split(Ymd, '-', Year, Month, Day),
            answer: gender(A, Gender) death_date(A, Day, Month, Year)
        }
    }

    == Who is X? ==
    {
        condition: question() who(B),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: long_description(B, D),
            answer: canned(D)
        }
    }

    == What is the capital of X? ==
    {
        condition: question() what(B),
        no_results: {
            answer: dont_know()
        },
        some_results: {
            preparation: label(B, L),
            answer: canned(L)
        }
    }

]