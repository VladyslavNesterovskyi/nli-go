[
    { rule: proper_noun(N1) -> first_name(A) second_name(B) third_name(C),  sense: name(N1, A, 1) name(N1, B, 2) name(N1, C, 3) }
    { rule: proper_noun(N1) -> first_name(A) second_name(B),                sense: name(N1, A, 1) name(N1, B, 2) }
    { rule: proper_noun(N1) -> first_name(A),                               sense: name(N1, A, 1) }

    { rule: qp(E1) -> the(E1),                                              sense: isa(E1, the) }

    { rule: np(R1) -> qp(Q1) nbar(R1),                                      sense: quant(Q1, sem(1), R1, sem(2), sem(parent)) }
    { rule: np(E1) -> proper_noun(E1) }

    { rule: nbar(E1) -> noun(E1) }
    { rule: nbar(E2) -> capital() of() np(E1),                              sense: has_capital(E1, E2) }

    { rule: pp(E1) -> above() number(N1),                                   sense: greater_than(E1, N1) }

    { rule: np_comp(E1) -> marry(P1) np(E2),            sense: marry(P1, E1, E2) }
    { rule: np_comp(E1) -> marry(P1) to(P1) np(E2),     sense: marry(P1, E1, E2) }

    { rule: np_comp2(E1) -> child(E1) have(P1) np(E2),  sense: have_child(E2, E1) }
    { rule: np_comp2(E1) -> country(E1) have() population(E2) pp(E2),  sense: have_population(E1, E2) }

    { rule: np_comp3(P1) -> aux_be() np(E1) bear(P1),   sense: bear(P1, _, E1) }
    { rule: np_comp3(P1) -> aux_do() np(E1) die(P1),    sense: die(P1, E1) }

    { rule: np(E1) -> np(E2) possessive_marker_1() possessive_marker_2() father(E1),  sense: has_father(E2, E1) }
    { rule: np(E1) -> np(E2) possessive_marker_1() possessive_marker_2() mother(E1),  sense: has_mother(E2, E1) }
    { rule: np(E1) -> np(E2) possessive_marker_1() possessive_marker_2() daughter(E1),  sense: has_daughter(E2, E1) }
    { rule: np(E1) -> np(E2) possessive_marker_1() possessive_marker_2() son(E1),  sense: has_son(E2, E1) }

    { rule: nbar(E1) -> daughter(E1) of(E1) np(E2),  sense: has_daughter(E2, E1) }
    { rule: nbar(E1) -> son(E1) of(E1) np(E2),  sense: has_son(E2, E1) }
    { rule: nbar(E1) -> father(E1) of(E1) np(E2),  sense: has_father(E2, E1) }
    { rule: nbar(E1) -> mother(E1) of(E1) np(E2),  sense: has_mother(E2, E1) }

    { rule: interrogative(P1) -> who(E1) np_comp(E1),   sense: who(E1) }
    { rule: interrogative(P1) -> who(E1) copula() np(E1),   sense: who(E1) }
    { rule: interrogative(P1) -> when(P1) np_comp3(P1),   sense: when(P1) }
    { rule: interrogative(P1) -> how() many() np_comp2(E1), sense: how_many(E1) }
    { rule: interrogative(P1) -> aux_be() np(E1) np_comp(E1),   sense: yes_no(_) }
    { rule: interrogative(P1) -> what(E1) copula() np(E1),   sense: what(E1) }

    { rule: interrogative(S1) -> interrogative(S1) question_mark() }
    { rule: s(S1) -> interrogative(S1),                                     sense: question(S1) }
]