[
    form: 'a',                  pos: article,               sense: isa(this, a);
    form: 'an',                 pos: article,               sense: isa(this, a);
    form: 'the',                pos: article,               sense: isa(this, the);

    form: 'very',               pos: degree,                sense: isa(this, very);

    form: 'quickly',            pos: adverb,                sense: isa(this, quick);

    form: 'small',              pos: adjective,             sense: isa(this, small);
    form: 'large',              pos: adjective,             sense: isa(this, large);

    form: 'i',                  pos: pronoun,               sense: isa(this, i);
    form: 'you',                pos: pronoun,               sense: isa(this, you);

    form: 'that',               pos: complementizer,        sense: isa(this, that);

    form: 'and',                pos: conjunction,           sense: isa(this, and);
    form: 'or',                 pos: conjunction,           sense: isa(this, or);

    form: 'person',             pos: noun,                  sense: isa(this, person);

    form '\'s',                 pos: possessiveMarker;

    form 'on',                  pos: preposition,           sense: isa(this, on);
    form 'at',                  pos: preposition,           sense: isa(this, at);

    form 'right',               pos: pSpec,                 sense: isa(this, right);

    form 'have',                pos: verb,                  sense: isa(this, have);
    form 'is',                  pos: verb,                  sense: isa(this, be);
    form 'are',                 pos: verb,                  sense: isa(this, be);

    form 'at',                  pos: particle,              sense: isa(this, are);

    form 'can',                 pos: modal,                 sense: isa(this, can);
    form 'must',                pos: modal,                 sense: isa(this, must);
    form 'will',                pos: modal,                 sense: isa(this, will);

    form 'is'                   pos: auxVerb,               sense: isa(this, be);
    form 'was'                  pos: auxVerb,               sense: isa(this, be);
]
