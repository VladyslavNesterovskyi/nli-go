[
    /* commands */
    do_pick_up(P1, E1) :- command(P1) at(E1, X, Y, Z) move_hand(X, Y, Z) grasp(E1) raise_hand() memo(pick_up(123, E1));
    do_find(P1, E1) :- command(P1);
    do_put_into(Ev, A, B) :- do_pick_up(Ev1, A) at(B, X, Y, Z) move_hand(X, Y, Z) release(A) make_containing(B, A);

    /* inferences */
    object(E1) :- block(E1);
    object(E1) :- pyramid(E1);
    hold(P1, E1, E2) :- grasping(E1, E2);
    you(E1) :- ;
    i(E1) :- ;
    tell(P1, P2) :- call(P2);
    raise_hand() :- at(`:hand`, X, Y, Z1) add(Z1, 1000, Z2) move_hand(X, Y, Z2);
    height(E, H) :- size(E, _, _, H);
    width(E, W) :- size(E, W, _, _);
    big(E) :- size(E, Width, Length, Height) greater_than(Width, 128) greater_than(Length, 128) greater_than(Height, 128);
    taller(A, B) :- height(A, Ha) height(B, Hb) greater_than(Ha, Hb);
    narrower(A, B) :- width(A, Wa) width(B, Wb) less_than(Wa, Wb);

    /* storage */
    memo(P1) :- assert(P1);
    make_containing(A, B) :- assert(do_contain(_, A, B));
    move_hand(X, Y, Z) :- retract(at(`:hand`, _, _, _)) assert(at(`:hand`, X, Y, Z));
    grasp(X) :- retract(grasping(_, _)) assert(grasping(`:now`, X));
    release(E1) :- retract(grasping(_, _)) at(`:hand`, X, Y, Z) assert(at(E1, X, Y, Z));
]