[
    { form: 'every',              pos: quantifier,            sense: isa(E, all) }

    { form: 'who',                pos: wh_word,               sense: isa(E, who) }
    { form: 'which',              pos: wh_word,               sense: isa(E, which) }

    { form: 'siblings',           pos: noun,                  sense: isa(E, sibling) }
    { form: 'children',           pos: noun,                  sense: isa(E, child) }
    { form: 'parent',             pos: noun,                  sense: isa(E, parent) }

    { form: 'did',                pos: aux,                   sense: isa(E, do) tense(E, past) }
    { form: 'does',               pos: aux,                   sense: isa(E, do) }
    { form: 'are',                pos: aux_copula,            sense: isa(E, be) }

    { form: 'many',               pos: adjective,             sense: isa(E, many) }

    { form: 'married',            pos: verb,                  sense: isa(E, marry) }
    { form: 'marry',              pos: verb,                  sense: isa(E, marry) }
    { form: 'has',                pos: verb,                  sense: isa(E, have) }
    { form: 'have',               pos: verb,                  sense: isa(E, have) }

    { form: 'how',                pos: adverb,                sense: isa(E, how) }

    { form: 'and',                pos: conjunction,           sense: isa(E, and) }

    { form: 'de',                 pos: second_name,           sense: name(E, 'de', 2) }
    { form: 'van',                pos: second_name,           sense: name(E, 'van', 2) }

    { form: /^[A-Z]/,             pos: first_name,            sense: name(E, Form, 1) }
    { form: /^[A-Z]/,             pos: second_name,           sense: name(E, Form, 2) }
    { form: /^[A-Z]/,             pos: third_name,            sense: name(E, Form, 3) }

    { form: /^[0-9]+/,            pos: number,                sense: number(E, Form) }

    { form: '?',                  pos: question_mark }
]
