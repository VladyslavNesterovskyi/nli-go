[
    {
        condition: act(question, who) married_to(A, B) focus(A),
        no_results: {
            answer: none()
        },
        some_results: {
            preparation: gender(B, G) name(A, N),
            answer: focus(A) married_to(A, B) gender(B, G) name(A, N)
        }
    } {
        condition: act(question, yes_no) married_to(A, B),
        no_results: {
            answer: result(false)
        },
        some_results: {
            answer: result(true)
        }
    } {
        condition: act(question, yes_no) siblings(A, B),
        no_results: {
            answer: result(false)
        },
        some_results: {
            answer: result(true)
        }
    } {
        condition: act(question, how_many) have_child(B, A) focus(A),
        no_results: {
            answer: none()
        },
        some_results: {
            preparation: gender(B, G) number_of(N, A),
            answer: gender(B, G) count(C, N) have_child(C, B)
        }
    } {
        condition: act(question, which) have_child(B, A) focus(A),
        no_results: {
            answer: none()
        },
        some_results: {
            preparation: name(A, N),
            answer: name(A, N) make_and(A, R)
        }
    } {
        condition: act(question, yes_no) have_child(B, A) every(B),
        no_results: {
            answer: none()
        },
        some_results: {
            preparation: exists(G, B),
            answer: result(G)
        }
    } {
        condition: act(question, yes_no) have_child(B, A),
        no_results: {
            preparation: exists(G, B),
            answer: result(G)
        },
        some_results: {
            preparation: exists(G, B),
            answer: result(G)
        }
    }
]